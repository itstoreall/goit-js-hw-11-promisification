{"version":3,"sources":["webpack:///./js/delay.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":"iJAYMA,EAAQ,SAAAC,GAOX,OANgB,IAAIC,SAAQ,SAACC,GAC1BC,YAAW,WACRD,EAAQF,KACRA,OAMHI,EAAS,SAAAC,GAAI,OAAIC,QAAQC,IAAR,kBAA8BF,EAA9B,OAGvBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ,G","file":"main.17e0e78f422c9d7963c2.js","sourcesContent":["/**\n * \n * Задание 1\n * \n * Напиши функцию delay(ms), которая возвращает \n * промис, переходящий в состояние \"resolved\" \n * через ms миллисекунд. Значением исполнившегося \n * промиса должно быть то кол-во миллисекунд которое \n * передали во время вызова функции delay\n * \n */\n\nconst delay = ms => {\n   const promise = new Promise((resolve) => {\n      setTimeout(() => {\n         resolve(ms);\n      }, ms);\n   });\n\n   return promise;\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms"],"sourceRoot":""}